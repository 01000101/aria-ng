tosca_definitions_version: tosca_simple_yaml_1_0

description: >-
  Node Cellar TOSCA blueprint.

metadata:
  template_name: node-cellar
  template_author: ARIA
  template_version: 1.0.0

imports:
  - types/openstack.yaml
  - types/nodejs.yaml
  - types/mongodb.yaml
  - tosca-simple-nfv-1.0/tosca-simple-nfv-1.0.yaml # importing this only for validation

dsl_definitions:

  openstack_credential: &OPENSTACK_CREDENTIAL
    user: openstackadmin
    token: openstack123

repositories:

  node_cellar:
    description: >-
      The repository for the Node Cellar application and its dependencies.
    url: https://github.com/cloudify-cosmo/nodecellar/archive

relationship_types:

  ConnectsTo:
    derived_from: tosca.relationships.ConnectsTo
    interfaces:
      standard2:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          input1:
            type: string
            #default: hat
        create:
          inputs:
            input2:
              type: integer
          implementation:
            primary: scripts/doit.sh
            dependencies:
              - utils/os.sh

node_types:

  NodeMongoApplication:
    derived_from: nodejs.Application
    requirements:
      - database:
          capability: tosca.capabilities.Endpoint.Database
          node: mongodb.Database

topology_template:

  relationship_templates:
  
    connects_to:
      type: ConnectsTo
      interfaces:
        standard2:
          inputs:
            input1: hello
          create:
            inputs:
              input2: 2

  node_templates:
  
    # Application

    node_cellar:
      description: >-
        Node Cellar Node.js web application.
      type: NodeMongoApplication
      artifacts:
        node_cellar:
          description: >-
            The Node Cellar application package.
          type: os.Archive
          file: master.tar.gz
          repository: node_cellar
          deploy_path: /opt/nodejs/applications/node-cellar
      requirements:
        #- database: node_cellar_database
        #- database:
        #    node: node_cellar_database
        #    capability: database_endpoint
        #    relationship:
        #      type: connects_to # relationship type or relationship template
        #      properties:
        #        credential:
        #          user: admin
        #          token: admin123
        #      interfaces:
        #        standard2:
        #          inputs:
        #            input1: asdadsd
        #          create:
        #            inputs:
        #              input2: 23
        #- database:
        #    capability: tosca.capabilities.Endpoint.Database
        #- database:
        #    node: mongodb.Database
        #- database:
        #    node: tosca.nodes.LoadBalancer
        #- database:
        #    node: node_cellar_database
        #    capability: database_endpoint
      capabilities:
        app_endpoint:
          properties:
            protocol: udp
            url_path: /nodecellar
    
    node_cellar_database:
      description: >-
        Node Cellar MongoDB database.
      type: mongodb.Database
      properties:
        name: node_cellar
      artifacts:
        initial:
          description: >-
            The Node Cellar initial database.
          type: mongodb.DatabaseDump
          file: node-cellar.json
          repository: node_cellar

    # Server software
    
    nodejs:
      description: >-
        Node.js instance.
      type: nodejs.Server
      requirements:
        - host: application_host

    mongodb:
      description: >-
        MongoDB instance.
      type: mongodb.Server
      requirements:
        - host: data_host
    
    # Hosts

    application_host:
      description: >-
        Host for applications.
      type: openstack.Instance
      properties:
        os_users: # map of os.UserInfo
          root:
            password: admin123
          nodejs:
            password: nodejs123
            groups:
              - www-data
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL
      capabilities:
        scalable:
          properties:
            max_instances: 10

    data_host:
      description: >-
        Host for data.
      type: openstack.Instance
      properties:
        flavor_name: m1.large
        os_users: # map of os.UserInfo
          root:
            password: admin123 
          mongodb:
            password: mongo123
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL
      requirements:
        - local_storage:
            node: data_volume
            relationship:
              properties:
                location: /mnt/volume
      capabilities:
        scalable:
          properties:
            max_instances: 10

    data_volume:
      type: openstack.Volume
      properties:
        size: 10 GB
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL

  groups:
  
    node_cellar_group:
      type: openstack.Secured
      members:
        - application_host
        - data_host
      interfaces:
        standard:
          inputs:
            openstack_credential: *OPENSTACK_CREDENTIAL

  policies:
  
    scaling:
      type: openstack.Scaling
      properties:
        bandwidth_threshold: 2 GB
      targets: # node templates or groups
        - node_cellar_group
